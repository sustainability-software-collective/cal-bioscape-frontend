steps:
  # Debug step to verify secret access
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'if [ -z "${MAPBOX_ACCESS_TOKEN:-}" ]; then echo "ERROR: Secret not found in environment"; else echo "SUCCESS: Secret is available (${#MAPBOX_ACCESS_TOKEN} characters)"; fi'
    secretEnv: ['MAPBOX_ACCESS_TOKEN']

  # First try with an explicit test value to verify build-arg works
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Testing with hardcoded value first"
        docker build -t test-build-only \
          --build-arg=MAPBOX_ACCESS_TOKEN_BUILD="TEST_TOKEN_NOT_REAL" . || true

  # Then try with the actual secret
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "Building with secret (${#MAPBOX_ACCESS_TOKEN:-0} characters)"
        # Store in file to avoid shell interpretation issues
        echo -n "$MAPBOX_ACCESS_TOKEN" > /workspace/_secret
        docker build -t gcr.io/$PROJECT_ID/biocirv-frontend:$SHORT_SHA \
          --build-arg=MAPBOX_ACCESS_TOKEN_BUILD="$(cat /workspace/_secret)" .
        rm /workspace/_secret
    secretEnv: ['MAPBOX_ACCESS_TOKEN']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/biocirv-frontend:$SHORT_SHA'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'biocirv-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/biocirv-frontend:$SHORT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

images:
  - 'gcr.io/$PROJECT_ID/biocirv-frontend:$SHORT_SHA'

availableSecrets:
  secretManager:
    # Explicitly use project ID to avoid any variable expansion issues
    - versionName: projects/$PROJECT_ID/secrets/mapbox-access-token/versions/latest
      env: 'MAPBOX_ACCESS_TOKEN'
